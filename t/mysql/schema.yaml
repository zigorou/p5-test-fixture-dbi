--- 
- 
  data: "CREATE TABLE `friend` (\n  `id` int(11) NOT NULL,\n  `friend_id` int(11) NOT NULL,\n  `status` int(11) NOT NULL DEFAULT '0',\n  `created_on` datetime NOT NULL,\n  `updated_on` datetime NOT NULL,\n  PRIMARY KEY (`id`,`friend_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8"
  schema: friend
- 
  data: "CREATE TABLE `people` (\n  `id` int(11) NOT NULL,\n  `nickname` varchar(32) NOT NULL,\n  `status` int(11) NOT NULL DEFAULT '0',\n  `created_on` datetime NOT NULL,\n  `updated_on` datetime NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `idx_people_on_nickname` (`nickname`),\n  KEY `idx_people_on_id_and_created_on` (`id`,`created_on`),\n  KEY `idx_people_on_id_and_updated_on` (`id`,`updated_on`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8"
  schema: people
- 
  data: "CREATE TABLE `people_counter` (\n  `counter` int(11) NOT NULL DEFAULT '0'\n) ENGINE=MyISAM DEFAULT CHARSET=utf8"
  schema: people_counter
- 
  data: "CREATE TABLE `friend_counter` (\n  `counter` int(11) NOT NULL DEFAULT '0'\n) ENGINE=MyISAM DEFAULT CHARSET=utf8"
  schema: friend_counter
- 
  data: "CREATE TABLE `transit` (\n   `id` int(11) NOT NULL, `from` varchar(50) NOT NULL, `to` varchar(50) NOT NULL \n) ENGINE=InnoDB DEFAULT CHARSET=utf8"
  schema: transit
- 
  data: "CREATE PROCEDURE `proc_get_people_counter`()\nBEGIN\n    SELECT counter FROM people_counter;\n  END"
  procedure: proc_get_people_counter
- 
  data: "CREATE PROCEDURE `proc_get_friend_counter`()\nBEGIN\n    SELECT counter FROM friend_counter;\n  END"
  procedure: proc_get_friend_counter
- 
  data: "CREATE FUNCTION `func_hello_world`() RETURNS varchar(32) CHARSET utf8\nRETURN 'Hello world'"
  function: func_hello_world
- 
  data: "CREATE FUNCTION `func_hello_world2`() RETURNS varchar(32) CHARSET utf8\nRETURN 'Hello world'"
  function: func_hello_world2
- 
  data: "CREATE TRIGGER on_after_delete_people AFTER DELETE ON people\n  FOR EACH ROW BEGIN\n    UPDATE people_counter SET counter = counter - 1;\n  END"
  refer: people
  trigger: on_after_delete_people
- 
  data: "CREATE TRIGGER on_after_insert_people AFTER INSERT ON people\n  FOR EACH ROW BEGIN\n    UPDATE people_counter SET counter = counter + 1;\n  END"
  refer: people
  trigger: on_after_insert_people
- 
  data: "CREATE TRIGGER on_after_delete_friend AFTER DELETE ON friend\n  FOR EACH ROW BEGIN\n    UPDATE friend_counter SET counter = counter - 1;\n  END"
  refer: friend
  trigger: on_after_delete_friend
- 
  data: "CREATE TRIGGER on_after_insert_friend AFTER INSERT ON friend\n  FOR EACH ROW BEGIN\n    UPDATE friend_counter SET counter = counter + 1;\n  END"
  refer: friend
  trigger: on_after_insert_friend
-
  data: "CREATE EVENT event_hello ON SCHEDULE EVERY 3 SECOND\n  DO\n  SELECT UNIX_TIMESTAMP()"
  event: event_hello
